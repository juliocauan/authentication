openapi: '3.0.3'
info:
  title: Token Authentication API
  version: '0.0.1'
servers:
  - url: https://api.server.test/v1
tags:
  - name: 'auth'
  - name: 'test'

paths:
  /api/auth/signup:
    post:
      tags:
        - 'auth'
      summary: 'Signup new Account'
      description: 'Check existing and Save User to database'
      operationId: signupUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupForm'
      responses:
        '200':
          description: 'Registered successfully!'
        '400':
          description: 'Bad Request in form! Could not register new User!'

  /api/auth/signin:
    post:
      tags:
        - 'auth'
      summary: 'Login an Account'
      description: 'Authenticate {username, password} and Create JWT string with a secret'
      operationId: signinUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigninForm'
      responses:
        '200':
          description: 'Authenticated successfully!'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTResponse'
        '401':
          description: 'Unauthorized!'

components:
  schemas:
    SignupForm:
      type: object
      required:
        - 'username'
        - 'email'
        - 'role'
        - 'password'
      properties:
        username:
          $ref: '#/components/schemas/Username'
        email:
          $ref: '#/components/schemas/Email'
        role:
          $ref: '#/components/schemas/RoleType'
        password:
          $ref: '#/components/schemas/Password'
    SigninForm:
      type: object
      required:
        - 'username'
        - 'password'
      properties:
        username:
          $ref: '#/components/schemas/Username'
        password:
          $ref: '#/components/schemas/Password'
    Email:
      type: string
      format: email
      description: 'User e-mail for contact and to redefine lost password [UNIQUE]'
      example: 'example@example.com'
    Username:
      type: string
      description: 'Name used to refer User [UNIQUE]'
      example: 'ForrestGump1'
      maxLength: 128
      minLength: 6
    Password:
      type: string
      format: password
      description: 'User password to access account'
      example: '1234567890'
      maxLength: 255
      minLength: 6
    RoleType:
      type: string
      enum:
        - 'ADMIN'
        - 'COMPANY'
        - 'CLIENT'
      description: 'User permissions'
    JWTResponse:
      type: object
      required:
        - 'token'
        - 'type'
        - 'userInfo'
        - 'authorities'
      properties:
        token:
          type: string
        type:
          type: string
        userInfo:
          type: string
        authorities:
          type: string
